#!/bin/bash

categories="htb|year2|year3|euler"

print_help () {
    printf "Usage: \n";
    printf "\tworkingdir [$categories] [folder_name] \n";
    printf "\tworkingdir - ~/Documents/[path_of_new_working_directory]\n";
    printf "\tworkingdir - home\n"; 
    printf "\tworkingdir [-l | --list] [$categories] \n"; 
    printf "\tworkingdir [-o | --open] [$categories] [name/substring of directory] \n"; 
    printf "\tworkingdir [-h | --help] \n";
}

if [ "$#" -le 0 ] || [ "$#" -ge 4 ] || [ "$1" = "--help" ] || [ "$1" = "-h" ] 
then
	print_help
	return
fi

pattern="(^~.*)|(^\/home\/$USER)"
if [[ $2 =~ $pattern ]] 
then
	printf "Invalid path. The home directory is already specified by default. Enter a path starting in the home Documents folder. \n"
	print_help
	return
fi

pattern_two="%"
if [[ $2 =~ $pattern_two ]]
then
	printf '%s\n' "Invalid path. It cannot contain a % sign."
	print_help
	exit 0
fi

# @param variable
category_selection() {
    case $1 in 
    htb)
        sourcedir=~/Documents/HackTheBox
        ;;
    year2)
        sourcedir=~/Documents/Computer_Science/Year_2
        ;;
    year3)
        sourcedir=~/Documents/Computer_Science/Year_3
        ;;
    euler) 
        sourcedir=~/Documents/ProjectEuler
        ;;
    *) 
        sourcedir="-"
        ;;
    esac
}

# @param directory name 
update_workingdir() { 
    echo "Setting the new working directory to $sourcedir/$1."
    mkdir --parent $sourcedir/$1
    sed -i "s%^export WKG_DIR=.*%export WKG_DIR=$sourcedir/$1%g" ~/.bashrc
}

load_changes() {
    printf "\tThe working directory is stored under the variable WKG_DIR.\n"
    . ~/.bashrc 
    cd $WKG_DIR
}

case $1 in 
-)
    if [ "$#" -ne 2 ] 
    then 
        printf "Insufficient arguments\n";
        print_help
        return 
    fi 

    case $2 in 
    "home")
        echo "Setting the new working directory to the home directory"
        sed -i "s%^export WKG_DIR=.*%export WKG_DIR=~%g" ~/.bashrc
        load_changes 
        return 
        ;;
    *)
        sourcedir=~/Documents 
        update_workingdir $2
        load_changes 
        return
        ;;
    esac 
    ;;
-l | --list)
    if [ "$#" -ne 2 ] 
    then 
        printf "Options: $categories \n"
        return 
    fi 

    category_selection $2
    if [ "$sourcedir" = "-" ] 
    then 
        print_help 
        return 
    fi 

    ls -1 $sourcedir 
    return 
    ;;
-o | --open)
    if [ "$#" -ne 3 ] 
    then 
        printf "Insufficient arguments \n";
        print_help
        return 
    fi 

    category_selection $2
    if [ "$sourcedir" = "-" ] 
    then 
        print_help 
        return 
    fi 
    results=$(ls -1 $sourcedir | grep -i $3 | wc -l)
    if [[ $results  -eq 0 ]] 
    then 
        printf "No matching directories found. \n"
        return 
    elif [[ $results -gt 1 ]] 
    then 
        printf "Multiple possible matches found: \n" 
        ls -1 $sourcedir | grep -i $3 
        return 
    else 
        match=$(ls -1 $sourcedir | grep -i $3) 
        update_workingdir $match
        load_changes
        return 
    fi 
    ;;
*)
    category_selection $1
    if [ "$sourcedir" = "-" ] 
    then 
        print_help 
        return 
    fi 
    update_workingdir $2
    load_changes 
    return 
	;;
esac

